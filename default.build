<?xml version="1.0"?>
<project name="NAnt Examples" default="rebuild">

	<property name="root.folder" value="${directory::get-current-directory()}" />
	<property name="build.folder" value="${root.folder}/build" />
	<property name="solution.folder" value="${root.folder}/main" />
	<property name="tools.folder" value="${root.folder}/tools" />
	<property name="schema.folder" value="${solution.folder}/schema" />
	<property name="program.files.x86" value="${environment::get-variable('ProgramFiles(x86)')}" if="${environment::variable-exists('ProgramFiles(x86)')}"/>
	<property name="program.files.x86" value="${environment::get-variable('ProgramFiles')}" unless="${property::exists('program.files.x86')}" />
	<property name="program.files" value="${environment::get-variable('ProgramFiles')}" />
	<property name="netfx.tools.folder" value="${program.files.x86}/Microsoft SDKs\Windows\v7.0A\Bin\NETFX 4.0 Tools" />
	<property name="netfx.folder" value="${environment::get-variable('SystemRoot')}/Microsoft.NET" />
	<property name="netfx.framework.folder" value="${netfx.folder}/Framework" if="${directory::exists(netfx.folder + '/Framework')}" />
	<property name="netfx.framework.folder" value="${netfx.folder}/Framework64" if="${directory::exists(netfx.folder + '/Framework64')}" />
	<property name="netfx4.folder" value="${netfx.framework.folder}/v4.0.30319" />
	
	<loadtasks assembly="${build.folder}/nantcontrib-0.85/bin/NAnt.Contrib.Tasks.dll" />

	<include buildfile="${build.folder}/version.build" />
	<include buildfile="${build.folder}/opencover.build" />
	<include buildfile="${build.folder}/environment.build" />
	<include buildfile="${build.folder}/schema.build" />

	<target name="build-environment" depends="get-os-version, create-snk, prepare-environment, get-version-number" />

	<target name="rebuild" depends="build-environment, clean, build, test" >
		<call target="test-cpp" if="${version::get-major(version::parse(machine.version))==6}" />
	</target>

	<target name="teamcity-build" depends="build-environment, clean" >
		<echo>##teamcity[buildNumber '${buildnumber.version}']</echo>
		<call target="build-all-platforms" />
	</target>
	
	<target name="generate-schema" depends="generate-wsdl-from-assembly, generate-c-from-wsdl" />
	
</project>